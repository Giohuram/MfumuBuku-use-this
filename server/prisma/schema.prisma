generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// models/User.model.prisma
enum SchoolLevel {
  Creche
  Maternelle
  Primaire
}

model User {
  id           Int        @id @default(autoincrement())
  username     String     @unique
  password     String
  parentName   String
  childAge     Int      
  schoolLevel  SchoolLevel
  email        String     @unique
  avatar       String?    // Champ pour le chemin de l'avatar
  createdAt    DateTime   @default(now())
  verified     Boolean  @default(false)
  Books        BookUser []
  // Ajoutez d'autres champs utilisateur selon vos besoins
}



// models/Book.model.prisma
model Book {
  id            Int      @id @default(autoincrement())
  title         String
  author        String
  content       String    // Champ pour stocker le contenu EPUB du livre
  category      String 
  datePublished DateTime
  bookCover     String
  audioContent  String?   // Nouvelle propriété pour le contenu audio du livre
  age           String? // Nouvelle propriété pour l'âge approprié du livre
  description   String?
  users          BookUser[]
  // Relation pour représenter les utilisateurs qui ont sélectionné ce livre
}

// Relation pour représenter les utilisateurs qui ont sélectionné ce livre
model BookUser {
  id       Int    @id @default(autoincrement())
  user     User   @relation(fields: [userId], references: [id])
  userId   Int
  book     Book   @relation(fields: [bookId], references: [id])
  bookId   Int
  // Vous pouvez ajouter d'autres champs comme la date à laquelle l'utilisateur a ajouté le livre, etc.
}


// models/Subscription.model.prisma
model Subscription {
  id           Int      @id @default(autoincrement())
  userId       Int
  type         String   // mensuel / annuel
  startDate    DateTime @default(now())
  endDate      DateTime
  // Ajoutez d'autres champs d'abonnement selon vos besoins
}

// models/ReadingHistory.model.prisma
model ReadingHistory {
  id        Int      @id @default(autoincrement())
  userId    Int
  bookId    Int
  readDate  DateTime @default(now())
  preferredCategory String
  readingLevel     String // débutant / intermédiaire / avancé
  // Ajoutez d'autres champs pour l'historique de lecture selon vos besoins
}

// // models/UserPreferences.model.prisma
// model UserPreferences {
//   id              Int      @id @default(autoincrement())
//   userId          Int
//   preferredLanguage String
//   preferredCategory String
//   readingLevel     String // débutant / intermédiaire / avancé
//   // Ajoutez d'autres champs de préférences utilisateur selon vos besoins
// }

// models/ParentalControl.model.prisma
model ParentalControl {
  id               Int      @id @default(autoincrement())
  isEnabled        Boolean  @default(false)
  allowedStartTime DateTime
  allowedEndTime   DateTime
  createdAt        DateTime @default(now())
  // Ajoutez d'autres champs selon vos besoins
}
